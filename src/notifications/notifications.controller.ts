import { Controller, Post, Body, Get, Param, Patch } from '@nestjs/common';
import { NotificationsService } from './notifications.service';
import { Logger } from '@nestjs/common';

@Controller('notifications')
export class NotificationsController {
	private readonly logger = new Logger(NotificationsController.name);
	constructor(private readonly service: NotificationsService) { }

	@Post()
	create(@Body() body: any) {
		return this.service.create(body);
	}

	@Get(':userId')
	findByRecipient(@Param('userId') userId: string) {
		this.logger.log(`üì© –ó–∞–ø—Ä–æ—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userId}`);
		return this.service.findByRecipient(userId);
	}

	@Patch(':id')
	updateNotification(@Param('id') id: string, @Body() body: any) {
		// –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω —Ç–æ–ª—å–∫–æ status, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
		if (body.status && Object.keys(body).length === 1) {
			return this.service.updateStatus(id, body.status);
		}
		// –ò–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
		return this.service.updateNotification(id, body);
	}

	@Get('by-lesson/:lessonId')
	async findByLessonId(@Param('lessonId') lessonId: string) {
		this.logger.log(`[NotificationsController] –ü–æ–∏—Å–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ lessonId: ${lessonId}`);
		return this.service.findByLessonId(lessonId);
	}

	@Post('fix-missing-teacher-names')
	async fixMissingTeacherNames() {
		this.logger.log(`[NotificationsController] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–º–µ–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π`);
		return this.service.fixMissingTeacherNames();
	}
}
